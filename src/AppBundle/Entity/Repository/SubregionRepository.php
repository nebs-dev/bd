<?php

namespace AppBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * SubregionRepository
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SubregionRepository extends EntityRepository {

    /**
     * Get all Subregions
     * @return array
     */
    public function getAll() {
        $qb = $this->createQueryBuilder('s')
            ->select('s, r, c')
            ->innerJoin('s.region', 'r')
            ->innerJoin('r.country', 'c');
        return $qb->getQuery()->getResult();
    }

    public function getByHr($hr) {
        $qb = $this->createQueryBuilder('s')
            ->select('s')
            ->where('s.hr = :hr')
            ->setParameter('hr', $hr);
        return $qb->getQuery()->getSingleResult();
    }

    public function getByEn($en) {
        $qb = $this->createQueryBuilder('s')
            ->select('s')
            ->where('s.en = :en')
            ->setParameter('en', $en);

        return (count($qb->getQuery()->getResult()) == 0) ? false : $qb->getQuery()->getSingleResult();
    }

    /**
     * get Subregion by RegionId
     * @param $regionId
     * @return mixed
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getByRegion($regionId) {
        $qb = $this->createQueryBuilder('s')
            ->select('s')
            ->where('s.region = :regionId')
            ->setParameter('regionId', $regionId);
        return $qb->getQuery()->getResult();
    }

    /**
     * Search autocomplete by string
     * @param $string
     * @return array
     */
    public function searchSubregionByString($string) {
        $qb = $this->createQueryBuilder('s')
            ->select('s')
            ->where('s.en like :string')
            ->orWhere('s.hr like :string')
            ->orWhere('s.de like :string')
            ->orWhere('s.it like :string')
            ->orWhere('s.es like :string')
            ->orWhere('s.fr like :string')
            ->orWhere('s.cs like :string')
            ->orWhere('s.sl like :string')
            ->orWhere('s.pl like :string')
            ->orWhere('s.hu like :string')
            ->orWhere('s.ru like :string')
            ->orWhere('s.pt like :string')
            ->orWhere('s.nl like :string')
            ->orWhere('s.da like :string')
            ->orWhere('s.sv like :string')
            ->orWhere('s.sk like :string')
            ->orWhere('s.no like :string')
            ->orWhere('s.fi like :string')
            ->orWhere('s.ca like :string')
            ->orWhere('s.sr like :string')
            ->orWhere('s.mk like :string')
            ->orWhere('s.bs like :string')
            ->orWhere('s.tr like :string')
            ->orWhere('s.ja like :string')
            ->orWhere('s.zh like :string')
            ->setParameter('string', '%' . $string . '%')
            ->setMaxResults(20);

        return $qb->getQuery()->getResult();
    }
}
